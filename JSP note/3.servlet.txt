0. 서블릿
    1) JSP가 나오기 전 , 자바로 웹 애플리케이션을 개발할 수 있도록 만든 기술.
    2) 서버 단에서 클라이언트의 요청을 받아 처리한 후 응답하는 역할을 함
    3) 클라이언트의 요청에 대해 동적으로 작동하는 웹 애플리케이션 컴포넌트임.

1. 서블릿 특징
    1) 기존의 정적인 웹 프로그래밍의 문제점을 보완하여 동적인 여러가지 기능을 제공함
    2) 스레드 방식으로 실행됨.
        - 모든 메서드는 스레드로 동작됨.   
    3) 자바로 만들어져 자바의 특징(OOP)을 가짐
    4) 컨테이너에서 실행됨
        - 스스로 작동하는 것은 아님
        - 서블릿을 관리하는 컨테이너가 필요함
    5) 웹 브라우저에서 요청 시 기능을 수행함

2. 서블릿 API 구조
    1) Servlet              ServletConfig       : 인터페이스

                GenericServlet : 추상클래스
                HttpServlet

    2) HttpServlet
        - GenericServlet을 상속받아 HTTP 프로토콜을 사용하는 웹 브라우저에서 서블릿 기능 수행함
        - 웹 브라우저 기반 서비스를 제공하는 서블릿을 만들 때 상속받아 사용함
        - 요청 시 service() 가 호출되면서 요청 방식에 따라 doGet()이나 doPost()가 차례대로 호출됨

    3) 서블릿 생명주기(Life Cycle) 메서드
        - 서블릿 실행 단계마다 호출되어 기능을 수행하는 콜백 메서드
            - init()
                - 초기화
                - 서블릿 요청시 맨 처음 한번 만 호출됨
            - doGet(), doPost()
                - 서블릿 요청 시 매번 호출됨
                - 실제로 클라이언트가 요청하는 작업을 수행함
            - destroy()
                - 서블릿이 메모리에서 소멸될 때 호출됨
                - 마무리 작업 주로 수행
                - 생략가능

3. 서블릿 매핑 방법
    1) 각 프로젝트에 있는 web.xml에서 설정 
    2) <servlet>태그와 <servlet-mapping>태그를 이용함
    3) 여러 개의 서블릿 매핑 시에는 <servlet>태그를 먼저 정의하고 <servlet-mapping>태그를 정의함

4. 서블릿 매핑하기
    1) http://주소:포트번호/프로젝트명/(패키지명이포함된)클래스명
        ex) http://127.0.0.1:8080/chap02_Sevelt/kr.co.ezenac.FirstServlet
    2) 서블릿 클래스에 대응하는 서블릿 매핑 이름으로 요청함
        - http://주소:포트번호/프로젝트명/서블릿매핑이름       
            ex) http://127.0.0.1:8080/chap02_Sevelt/first

5. 이너테이션을 이용한 서블릿 매핑
    1) Web.xml에 여러 서블릿 매핑 설정시 복잡해짐
    2) 서블릿 클래스에 직접 애너테이션을 설정하면 가독성이 좋아짐
    3) @WebServlet을 이용해서 서블릿 매핑을 구현함
        - @WebServlet("/서블릿 매핑 이름")