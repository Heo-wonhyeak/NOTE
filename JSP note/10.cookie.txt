1. 쿠키(Cookie)란?
    1) 클라이언트의 상태 정보를 유지하기 위한 기술임
        - 웹 페이지들 사이의 공유정보를 클라이언트 PC에 저장해 놓고 사용하는 방법
        - 웹사이트가 방문자를 기억하는 수단
            - 언제방문했는지, 어떤 페이지를 클릭했는지, 어떤 상품을 구매했는지 등 기록해 두었다가
              이를 활용하여 맞춤 서비스, 로그분석, 속도 개선등 할수있음.
    2) 상태 정보를 클라이언트 주로 웹 브라우저에 키(key)와 값(value)의 쌍(pair) 형태로 저장했다가 다음 요청시 저장된 쿠키를 함께 전송함
        => 웹 서버는 브라우저가 전송한 쿠키로부터 필요한 데이터를 읽어올 수 있음.
            - 3000개까지 만들 수 있음
            - 쿠키 하나의 최대 크기는 4096바이트임.
            - 보안이 취약함
                - 클라이언트 브라우저에서 사용 유무를 설정가능
            - 하나의 호스트나 도메인에서 최대 50개까지 만들 수 있음.
            - 서버에서 생성 후 전송, 브라우저에 저장. 유효기간 이후 자동 삭제

2. 레이어 팝업
    1) 웹 애플리케이션 개발할때 팝업창을 많이 사용하게 됨
    2) 회원 가입 시 아이디 중복체크, 간단한 공지사항 띄워주는 용도
    3) "하루동안 열지 않음"과 같은 문구가 쓰여진 팝업창 형태 
    4) 동작 예시
        - 메인 화면 
          팝업 공지         닫기 => 사라짐
          ("하루동안 열지 않음")
    5) 쿠키를 이용해 상태 정보 유지하기

3. 로그인 아이디 저장
    1) [아이디 저장하기] 체크박스를 체크하고 로그인에 성공한 경우에만 쿠키를 생성및 삭제함
    2) 쿠키에 저장된 아이디가 있다면 로그인 페이지에서는 아이디가 자동 입력됨
    3) [아이디 저장하기] 체크박스를 해제하고 로그인에 성공하면 쿠키가 삭제됨
    4) 동작 예시
        - 로그인 화면                                                      로그인 화면                                                              로그인 화면
            아이디      [v]아이디 저장하기 => 로그인성공 => 메인 화면 =(재방문)=>   (저장된 아이디 자동 입력됨) []아이디 저장하기 => 로그인성공 => 메인 화면 =(재방문)=>    아이디(저장된 아이디(쿠키) 삭제)
            비밀번호                                                      비밀번호                                                                 비밀번호
            로그인(버튼)                                                  로그인(버튼)                                                              로그인(버튼)
        
        - 로그인 화면                                                     로그인 화면
            아이디      []아이디 저장하기 => 로그인성공 => 메인 화면 =(재방문)=>    아이디
            비밀번호                                                      비밀번호
            로그인(버튼)                                                  로그인(버튼)
    5) 구현
        - 로그인 페이지 작성
        - 로그인 및 아이디 저장 기능
