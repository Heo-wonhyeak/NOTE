1. SQL (Structured Query Language)
    1) 관계형 데이터베이스(RDBMS)의 데이터를 관리하기 위해 설계된 특수 목적 프로그래밍 언어
    2) 자료의 검색과 관리, 데이터베이스 스키마 생성과 수정, 데이터베이스 객체 접근 조정관리를 위해 고안됨.
    3) 많은 수의 데이터베이스 관련 프로그램들이 SQL을 표준으로 채택하고 있음.
    4) 데이터에 구조화된(= 사전에 지정된) 질문을 하는 언어
    5) 대소문자 구별하지 않음

2. SQL의 용도

사용자 <-------> SQL 작성 및 <--------> DBMS(시스템 소프트웨어) <--------> 데이터베이스
                명령 수행

3. DDL (Data Definition Language, 데이터 정의어)
    1) DB, 테이블의 스키마를 정의, 수정하는 기능
    2) 테이블 생성, 컬럼 추가, 타입 변경, 각종 제약조건 지정, 수정 등
    3) CREATE : 테이블 생성
       DROP : 테이블 삭제
       ALTER : 테이블 변경 

    4) 테이블 생성
        CREATE TABLE 테이블이름 (                      []<< optional 하다 생략 가능하다
            속성이름 데이터타입 [NOT NULL] [DEFAULT 기본값] <<<<<제약조건
            [PRIMARY KEY(속성)]
            [UNIQUE (속성)]
            [FOREIGN KEY(속성) REFERENCES 테이블이름(속성)]
            [ON DELETE 옵션]
            [CONSTRAINT 이름]
            [CHECK(조건)]
        );

        - 제약 조건(constraint)
            - 사용자가 원하는 조건의 데이터만 유지하기 위해 생성함.
            - 데이터의 무결성을 유지하기 위한 DB의 보편적인 방법으로 테이블의 특정 칼럼의 설정하는 제약
                - NOT NULL
                    - 속성이 Null 값을 허용하지 않음을 의미하는 키워드
                    - 필수 입력 필드
                - DEFAULT
                    - 속성의 기본 값을 지정하는 키워드
                - PRIMARY KEY
                    - 기본키를 지정하는 키워드
                    - 테이블에 저장된 행을 고유하게 식별하기 위함
                    - 하나의 테이블에 단 하나의 기본 키만 정의 가능.
                    - 기본 키 생성 시 DBMS는 자동으로 UNIQUE 인덱스를 생성
                    - 기본 키 컬럼에는 null 입력 불가(not null)
                - FOREIGN KEY
                    - 다른 테이블의 기본 키를 외래 키로 지정하는 경우 생성함.
                    - 참조 무결성 제약조건 유지를 위해
                    참조되는 테이블에서 투플 변경 시 처리 방법을 지정하는 옵션
                        - on update no action : 투플을 변경하지 못하게 함.
                        - on update cascade : 관련 투플에서 외래키 값을 함께 변경함.
                        - on update set null : 관련 투플의 외래키 값을 null로 변경함.
                        - on update set default : 관련 투플의 외래키 값을 미리 지정한 기본값으로 변경함.
                - CHECK
                    - 테이블에 정확하고 유효한 데이터를 유지하기 위해 특정 속성에 대한 제약조건을 지정
                    - 입력할 수 있는 값 종류 및 범위를 제한함.

    5) 속성의 데이터타입
        - CHAR(n)
            - 고정 길이 문자열
            - 고정 길이를 가지고 있으므로 할당된 변수의 값이 n보다 작을 경우 차이만큼 공백으로 채워짐.
        - VARCHAR(n) 
            - 길이가 최대 n개인 가변길이 문자열
            - 할당된 변수의 값이 n보다 작을 경우 값만큼만 공간을 차지함.
        - INT
            - 정수 
        - NUMBER(L, D)
            - 정수, 실수를 저장함
            - L값은 전체 자리수, D값은 소수점 자리수
        - DATE
            - 연,월,일로 표현되는 날짜

    6) 테이블 변경
        1] 새로운 속성 추가
            - alter table 테이블이름
                add 속성 데이터타입 [not null] [default 기본값]; (한줄로 해도 괜찮음 가독성을 위해 줄바꿈 한것.)
        2] 기존 속성 삭제
            - alter table 테이블이름
                drop column 속성이름;
            - 만약 삭제할 속성과 관련된 제약조건이 존재하면 관련된 제약조건을 먼저 삭제해야함.
        3] 새로운 제약 조건 추가
            - alter table 테이블이름
                add constraint 제약조건이름 제약조건내용;
        4] 기존 제약 조건 삭제
            - alter table 테이블이름
                drop constraint 제약조건이름;

    7) 테이블 삭제
        - drop table 테이블이름;
            - 만약 참조하는(REFERENCES) 테이블이있다면 관련된 외래키 제약조건 먼저 삭제해야함.

4. ALTER TABLE
    1) 컬럼 추가
        - ALTER TABLE 테이블명 ADD CONSTRAINT 컬럼이름 타입 (not null); () == 내용 생략 가능
        - 테이블의 마지막 컬럼으로 들어간다 , 위치 지정 불가~!
    2) 컬럼 삭제
        - ALTER TABLE 테이블명 DROP COLUMN 컬럼이름;
        - 한번 삭제된 컬럼은 복구 불가능
    3) 컬럼 수정
        - 
        - 컬럼의 크기를 늘릴수는 있으나 줄이지는 못함.
        - NULL값만 가지고 있거나 아무 행도 없으면 줄일 수 있음.