1. 관계(Relationship)의 정의
    1) 상호 연관성이 있는 상태
    2) 엔티티 간 논리적인 연관성을 의미함
    3) 존재에 의한 관계와 행위에 의한 관계로 구분됨.

2. 관계의 페어링
    1) 관계는 엔티티 안에 인스턴스가 개별적으로 관계를 가지는 것 : 페어링(Pairing)
        - 집합의 관계로 표현
    2) 각각의 엔티티의 인스턴스들이 자신이 관련된 인스턴스들과 관계의 발생(사건)으로 참여하는 형태 : 관계 페어링(Relationship pairing)
    
3. 관계의 분류 
    1) 존재에 의한 관계
        - ex) 사원은 부서에 항상 속해있다.
              "소속된다" 는 존재의 형태에 의해 관계가 형성된 것.

    2) 행위에 의한 관계
        - ex) 주문은 고객이 주문을 할 때 발생한다.
              "주문한다" 는 행위에 의해 형성된 관계
    
4. 관계의 표기법
    1) 관계명(Membership) : 관계의 이름
        - 엔티티가 관계에 참여하는 형태를 지칭함.
        - 관계는 각각의 관계명(관점에 따른)을 가질수도 있고, 관계명 없이 표기하기도 한다.
        - 관점에 따라 능동적(Active)이거나 수동적(Passive)으로 명명된다.
        - 애매한 동사는 피한다.
        - 현재형으로 표현한다.
    2) 관계차수(Cardinality) : 1:1, 1:M, M:M
        1] 두개의 엔티티간 관계에서 참여자의 수를 표현한 것
            - 1:1 : 각각의 엔티티는 관계를 맺는 다른 엔티티에 대해 단지 하나의 관계만을 가지고 있음.
            - 1:M : 한쪽의 엔티티는 하나의 관계만을 가지고 있고, 한쪽의 엔티티는 여러개의 관계를 가질수 있음
                ex) 한명의 사원은 한 부서에 소속되고
                    한 부서에는 여러 사원을 포함함.
            - M:M : 각각의 엔티티는 관계를 맺는 다른 엔티티에 대해 하나 혹은 그 이상의 수와 관계를 가지고 있음
    3) 관계선택사양(Optionality) : 필수관계, 선택관계
        ex 1) 지하철 출발과 지하철 문 닫힘은 필수(Mandatory)적으로 연결 관계가 있는 것임.
                - 데이터 모델링의 관계에서는 필수 참여관계(Mandatory)가 됨 (실선표기)
           2) 안내방송은 지하철 출발과 상관없이 방송해도 아무런 문제가 발생하지 않는다
                - 정보로서의 관계는 있으나 선택적인 관계(Optional)가 됨 
           3) 선택적 관계 - 고객은 여러개의 주문을 할 수도있고, 주문을 하지 않을수도 있다.
              필수적 관계 - 주문은 반드시 고객을 가짐.

5. Identifiers(식별자) 개념
    1) 여러개의 인스턴스 각각을 구분할수 있는 논리적인 이름의 구분자
    2) 엔티티내의 각 인스턴스를 개별적으로 식별하기 위해 사용됨
        - ex) 고객(고객번호), 사원(사원번호), 주문(주문번호), 상품(상품번호) [단독일때는 심플하나, 관계가 이어지면 복잡해짐]

6. 식별자의 특징
    1) 주 식별자에 의해 엔티티내의 모든 인스턴스들이 구분되어야 함.(Primary Key)
    2) 주 식별자를 구성하는 속성의 수는 유일성을 만족하는 최소의 수가 되어야 함.
    3) 지정된 주 식별자의 값은 자주 변하지 않는 것이어야 함.
    4) 주 식별자가 지정이 되면 반드시 값이 들어와야 함.(Not null) << 따로 정의할 필요 없이 primary key에 종속됨

7. 식별자의 분류
    1) 대표성 여부
        1] 주 식별자
            - 엔티티 내에서 각 행을 구분할 수 있는 구분자.
            - 타 엔티티와 참조 관계를 연결할 수 있는 식별자.
            - ex) 고객번호 ,사원번호
        2] 보조식별자
            - 엔티티 내에서 각 행을 구분할 수 있는 구분자 but 대표성은 가지지 못해 참조관계 연결 불가!
            - ex) 사원 주 식별자 : 사원번호 / 보조 식별자 : 주민등록번호
    2) 스스로 생성여부
        - 내부식별자 : 엔티티 내부에서 스스로 만들어지는 식별자 
            - ex) 고객번호 , 사원번호
        - 외부식별자 : 타 엔티티와의 관계를 통해 타 엔티티로부터 받아오는 식별자
            - ex) [FK] 주문(고객번호)
    3) 속성의 수
        - 단일식별자 : 하나의 속성으로 구성된 식별자
        - 복합식별자 : 둘 이상의 속성으로 구성된 식별자
            - ex) 교육이력엔티티의 사원번호 + 수강일자 
    4) 대체여부
        - 본질 식별자 : 업무에 의해 만들어지는 식별자
            - ex) 고객번호
        - 인조 식별자 : 본질식별자가 복잡한 구성을 가지고 있으므로 인위적으로 만든 식별자
            - ex) 주문엔티티의 고객번호+주문번호+순번

8. 식별자 도출 기준
    1) 해당 업무에서 자주 이용되는 속성을 주 식별자로 지정함.
    2) 명칭, 내역 등과 같이 이름으로 기술되는 것들은 가능하면 주 식별자로 지정하지 않음.
    3) 복합으로 주 식별자로 구성할 경우 너무 많은 속성이 포함되지 않도록 함

9. 식별자 관계와 비 식별자 관계의 결정
    1) 외부식별자 (Foreign Identifier)는 자기 자신의 엔티티에서 필요한 속성이 아니라
       다른 엔티티와 관계를 통해 자식 엔티티에 생성되는 속성
        - 데이터 베이스의 Foreign Key 역할을 함.
    2) 자식 엔티티에서 부모 엔티티로부터 받은 외부식별자를 자신의 주 식별자로 이용 : 식별자 관계(Identifying Relationship)
        - 자식엔티티의 주 식별자로 부모의 주 식별자가 상속이 되는 경우
        - 외부 식별자의 주 식별자 역할
        - 부모 식별자가 자식에게도 식별자 역할을 함.
    3) 부모와 연결이 되는 속성으로만 이용 : 비 식별자 관계(Non-Identifying Relationship)
        - 부모엔티티로부터 속성을 받았지만, 일반적인 속성으로만 사용
        - 부모엔티티에서 받은 식별자를 주 식별자로 사용하는 것보다 
          별도의 주 식별자를 사용하는 것이 유리하다고 판단될때 사용
        - 외부 식별자는 FK로써의 역할을 함
        - 부모의 식별자는 자식에게 FK로서의 역할을 함.


        
