1. 상속(inheritance) 개념
    1) 기존의 클래스를 확장하여 새로운 클래스를 작성하는 것.
    2) 상속하는 클래스
        - 상위 클래스(parent class / bass class / super class) = 기반클래스 조상클래스
    3) 상속받는 클래스
        - 하위 클래스(child class/ derived clas / subclass) = 파생클래스 자손클래스
    4) 자손은 조상의 모든 멤버를 상속 받음.(단, 생성자, 초기화 블러그 제외)
    5) 자손의 멤버개수가 조상보다 적을 수 업음.(같거나 많음) -- 다형성 개념 적용.
        - 이미 구현된 클래스보다 더 구체적인 기능을 가진 클래스를 구현할때 기존 클래스를 상속함.
    6) 상속의 문법
        - extends 키워드 뒤에 단 하나의 클래스만 올수 있음
        - 자바는 단일 상속(single inheritance)만 지원함.
    7) is a 관계 : ~은 ~이다 (자손클래스는 조상클래스이다.)
        - 직접적 관계
        - 만들어질 클래스에 영향을 가장 많이 주는 클래스는 상속함.

2. 상속을 구현하는 경우
    1) 상위 클래스는 하위 클래스보다 더 일반적인 개념과 기능을 가짐.
    2) 하위 클래스는 상위 클래스보다 더 구체적인 개념과 기능을 가짐
    3) 하위클래스가 상위 클래스의 속성과 기능을 확장(extends) 하는 의미를 가짐.

3. 포함 관계 (composite)
    1) 다중 상속을 대체하는 방법
    2) 클래스의 멤버변수로 다른 클래스를 선언하는 것
    3) 규모가 적은 클래스를 먼저 만들고, 이것을 조합하여 규모가 큰 클래스를 만들어감.
    4) has a 관계 : ~은 ~를 가지고 있다.
        - 보조적인 것은 포함 관계로 정의.

4. Object 클래스
    1) 모든 클래스의 조상
    2) 사용자 정의 클래스는 아무것도 상속을 받지 않더라도 자동으로 Object클래스를 상속 받음.

5. 상속에서 하위 클래스가 생성되는 과정
    0) 항상 상위 클래스의 인스턴스가 먼저 생성되고, 하위 클래스의 인스턴스가 생성됨.
    1) 하위클래스를 생성하면 상위 클래스가 먼저호출 됨.
        - new VIP();(자손) 호출되려면 Customer();(조상) 먼저 호출됨.
    2) 클래스가 상속받은 경우 하위 클래스의 생성자에서는 반드시 상위 클래스의 생성자를 호출함.

6. this
    1) 인스턴스 자기 자신의 주소를 가지고 있는 참조변수
    2) 지역변수와 인스턴스 멤버변수 구별함(변수의 모호성).

7. super
    1) 하위클래스에서 가지는 상위 클래스에 대한 참조 값
    2) 근본적으로 this와 같음. but 가르키는 위치가 다름.
    3) 조상의 멤버와 자신의 멤버를 구별지을때 사용함.

8. super();
    1) 상위 클래스의 기본 생성자를 호출함.
    2) 하위 클래스에서 명시적으로 상위클래스의 생성자를 호출하지 않으면 컴파일러가 super()를 자동으로 호출함.
        - 이때 반드시 상위 클래스의 기본 생성자가 존재해야 함.
    3) 상위 클래스의 기본 생성자가 없는 경우 (다른 생성자가 있는 경우)
        - 하위 클래스에서는 생성자에서 super(값)를 이용하여 명시적으로 상위 클래스의 생성자를 호출함.

9. 오버라이딩 (Oberiding) -- 재정의
    1) 조상클래스에서 상속받은 메서드를 자손한테 맞게끔 구현부를 수정하는 것
    2) 반드시 메서드 선언부는 통일해야 함(리턴타입, 메서드명, 매개변수)

10. 오버로딩(Overloading)
    1) 매개변수의 갯수, 타입, 순서가 다른 경우임.
        매개변수의 이름과 리턴타입은 영향을 주지 않음.
    2) 새로운 매서드를 만드는 것 (new 개념)