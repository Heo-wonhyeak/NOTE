1. 배열이란?
    1) 자료를 순차적으로 한꺼번에 관리하는 방법
    2) 동일한 자료형의 순차적 자료구조(Data Structure)
    3) [] : 인덱스 연산자(~의 몇번째)를 이용하여 빠른 참조가 가능.
    4) 물리적 위치와 논리적 위치가 동일
    5) 배열의 순서는 0부터 시작
    6) 많은 데이터 양을 다룰때 유용하며, 컬렉션 프레임워크의 기초가 됨.

2. 배열 선언과 초기화
    1) 배열 선언하기
        - 1차원 배열 (타입이 같은 둘 이상의 데이터를 저장할 수 있는 1차원 구조의 메모리 공간)
        - 자료형[] 변수이름 = new 자료형[갯수] (standard)
          자료형 변수이름[] = new 자료형[갯수]
            - int[] arr1 = new int[10];
    2) 배열 초기화
        - 배열은 선언과 동시에 자료형에 따라 초기화 됨.(정수는 0, 실수는 0.0, 객체는 null)
        - 필요에 따라 초기값을 지정할 수 있음.
        - int[] numbers = new int[] {10,20,30}; (인덱스는 생략해야 함.)
            int[] numbers = {10,20,30};         (new int[] 생략 가능)

         int[] ids;
         ids = new int[] {10,20,30};            (선언후 배열을 생성하는 경우 new int[] 생략불가)
    3) 배열 사용하기.
        - [] 인덱스 연산자 활용 -- 메모리 위치 연산하여 찾아줌
        - 배열의 길이와 요소의 개수는 동일하지 않음.
            - 배열 선언시 개수만큼 메모리가 할당되지만, 실제 요소(데이터)가 없는 경우도 있음.
            - length 속성: 배열의 개수 반환

3. 향상된 for문 사용하기
    1) 배열의 n개 요소를 0부터 n-1까지 순차적 순회할때 간단하게 사용할 수 있음.
    2) for(변수 : 배열){

    }

4. 다차원 배열
    1) 2차원이상의 배열 (3차원 이상의 배열은 자주 사용되진 않음)
        - 2차원 2번 for문을 만들어야 함.
    2) []의 개수가 차원의 수를 의미함.
    3) 선언방법
        타입[][] 변수이름; (standard)
        타입 변수이름[][];
        타입[] 변수이름[];
    4) 배열 초기화
        int[][] array = new int[5][5];  (5x5x4 = 100byte)
        int[][] array2 = new int[][] {
                            {100,50,50},
                            {50,80,50},
                            {100,80,90}
        };                               (3x3x4= 36byte)
    5) 가변 배열 (열이 서로 다른 배열)

5. 객체 배열
    1) 요소가 되는 객체의 주소(4byte)가 들어갈 메모리만 할당되고(null) 
        각 요소 객체는 생성하여 저장해야 함.
    2) 객체 배열 복사하기
        - System.arraycopy(Object src, int srcPos,object dest, int destPos, int length)
            - 복사 원본의 위치 : 배열 src의 인덱스 srcPos
            - 복사 대상의 위치 : 배열 dest의 인덱스 destPos
            - 복사할 요소의 수 : length
            - 얕은 복사
            - 객체 주소만 복사됨.
            - 두 배열이 같은 객체를 가리킴
                - 배열의 요소를 수정하면 같이 수정됨.
    
    3) 깊은 복사
        - 각각의 객체를 생성하여 그 객체의 값을 복사하여 배열이 서로 다른 객체를 가리키도록 함.