0. 자바기초
  OOP(객체지향) 입문
  OOP 핵심
  자바의 유용한 클래스들
  자바의 다양한 기능들
  자바 미니 프로그램 만들기

1. 자바 개발 환경 구축
  1) OpenJDK 
  2) 이클립스
    - 괄호 : () 소괄호 
            {} 중괄호
            [] 대괄호

2. 자바 예약어
  1) Keyword
  2) 자바에서 미리 사용하는 단어
  3) 지정한 예약어를 클래스명이나 변수명으로 사용불가

3. 변수 (Variable)
  - 특정 메모리 영역에 할당한 이름
  - 하나의 값을 저장할 수 있는 메모리의 기억공간
  - 프로그램에서는 항상 변하는 값을 나타낼 필요가 있음
    - ex) 학생의 성적, 합계, 게임의 레벨, 회원 주소 ....
  - 표현하려는 수에 맞는 데이터 타입(자료형)을 이용하여 변수 선언 및 할당
  - 표현하려는 자료가 숫자, 문자, 문자열등 다양할 수 있으므로 그에 맞는 자료형을 사용

4. 변수의 이름
  - 영문자 (대문자, 소문자 구분)나 숫자를 활용
    특수문자($ 와 _) 두가지만 사용
  - 시작은 숫자로 할 수 없음
  - 예약어는 사용 불가
  - 그 용도에 맞고 가독성이 좋게 만드는 것이 중요.
    - int numberOfStudent; // 띄어쓰기는 안되며 연결되는 단어의 첫 단어는 대문자 - 카멜 표기법 (자바에서 주로 사용하는 표기법)
    - int number_of_student; // 스네이크 표기법 

5. 지수                      10진수 정수값
  1. 1 * 2⁰ = 1                  1
    가수  밑수
     2¹ = 2                      2
     2² = 2 * 2                  4
     ...
     2⁸ = 2 * 2 * ... * 2       256

  - 10진수를 2진수로
    - 2  11
      2  5     1
      2  2     1
         1     0
   => 10진수 11 = 2진수 1011₂

   - 2진수를 10진수로
    1   0   1   1
    2³  2²  2¹  2⁰
    8   0   2   1
     => 2진수 1011₂ = 10진수 11

    10진수 숫자    2진수 신호
    0            0₂
    11           1011₂
    255          1111 1111₂

    컴퓨터에서 정보를 처리하는 기본 단위 : 바이트
      바이트 단위 
      - 256을 표현하기 위해선 2byte(16bit)를 사용해서 하나의 신호를 마듦
      256            0000 0001 0000 0000₂

6. 자료형 (data type)
  1) 변수와 메모리
    - 변수를 선언하면 해당되는 자료형의 크기만큼 메모리가 할당
    - 변수는 할당된 메모리를 가리키는 이름
      - int num = 10;     // int = num -> 4byte의 정수형 메모리가 num이라는 이름으로 할당 
  
  2)기본 자료형 (primitive data type)의 종류
    - 8개 

    1] 정수형
    - byte 와 short
      - byte : 1바이트 단위의 자료형
               동영상, 음악 파일, 실행 파일의 자료를 처리할 때 사용
      - short : 2바이트 단위의 자료형
    - int 
      - 자바에서 사용하는 정수에 대한 defult 자료형
      - 4바이트 단위의 자료형
      - 프로그램에서 사용하는 대부분의 숫자는 int로 저장함.
    - long
      - 8바이트 자료형
      - 숫자의 뒤에 알파벳 L 또는 소문자 l을 써서 long형임을 표시함.

    2] 실수형
    - 부동 소수점 방식
      - 실수는 정수보다 정밀하기 때문에 정수와는 다른 방식으로 표현함.
      - 실수 값 0.1 표현
      - 지수부와 가수부로 표현함
      - 컴퓨터에서는 밑수를 2로 사용(2진법)
      - float형과 double형
      - 자바에서는 실수의 기본 타입은 double을 사용함

    3] 문자형
    - 문자는 어떻게 표현하여 사용하느냐?
      - 문자도 정수로 표현함
      - 어떤 문자를 컴퓨터 내부에서 표현하기 위해 특정 정수 값을 정의 
        - A는 65
          - 'A' => 65 (encoding : 문자를 숫자로 변환되는 것)
          - 'A' <= 65 (decoding : 숫자에서 다시 문자로 변환 되는 것)
      - 문자세트(character set) : 각 문자를 얼마로 표현할 것인지 코드 값을 모아둔 것
        - ASCII code : 알파벳과 숫자 특수 문자등을 1바이트에 표현하는데 사용하는 문자세트
        - UNICODE : 전세계 표준으로 만든 문자 세트
          - utf-8 : 1바이트에서 4바이트까지 다양하게 문자를 표현할 수 있음.
        - euc-kr, ...
        - 문자를 숫자로 변환한 값의 세트
      - 자바는 문자를 나타내기 위해 전세계 표준인 UNICODE를 사용
      - 문자를 위한 데이터 타입 char ch = 'A';

    4] 논리형
    - boolean
      - true(참), false(거짓) 두 가지만 나타냄
      - 1바이트 사용
      - 값이 존재하는지, 배열이 비었는지, 결과가 참인지 거짓인지등을 표현

7. 상수와 리터럴, 형변환
  1) 상수 (constant)
    - 변하지 않는 수
    - ex) 원주율 , 1년 12개월 , 4계절 etc
    - final(예약어) : 선언 키워드
   
  2) 리터럴 (literal)
    - 프로그램에서 사용하는 숫자, 문자, 논리값을 뜻함
    - 리터럴은 상수 풀(constant pool)에 있음
    - 정수 리터럴은 int로 
      실수 리터럴은 double로 저장됨

  3) 형변환(type conversion)
    - 서로 다른 자료형 간에 연산등의 수행을 우ㅐ해 하나의 자료형으로 통일 하는 것
    - 묵시적 형변환 (자동 형변환:explicit type conversion)
      - 주체 : 컴파일러(자동)
      - 바이트 크기가 작은 자료형에서 큰 자료형으로 형 변환은 자동으로 이루어짐.
      - 덜 정밀한 자료형에서 더 정밀한 자료형으로 형 변환은 자동으로 이루어짐. 
          - 정수                                   - 실수
            1바이트     2      4       8               4        8 
          - byte => short => int => long     =>    float => double
                    char
    - 명시적 형변환 (강제 형변환:implocit type conversion)
      - 주체 : 프로그래머(수동)
